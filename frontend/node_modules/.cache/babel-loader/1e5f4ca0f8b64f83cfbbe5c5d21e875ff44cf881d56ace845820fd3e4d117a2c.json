{"ast":null,"code":"'use client';\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _default;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _jsxruntime = require(\"react/jsx-runtime\");\nconst _react = /*#__PURE__*/_interop_require_default._(require(\"react\"));\nconst _resolvehref = require(\"./resolve-href\");\nconst _islocalurl = require(\"../shared/lib/router/utils/is-local-url\");\nconst _formaturl = require(\"../shared/lib/router/utils/format-url\");\nconst _utils = require(\"../shared/lib/utils\");\nconst _addlocale = require(\"./add-locale\");\nconst _routercontextsharedruntime = require(\"../shared/lib/router-context.shared-runtime\");\nconst _useintersection = require(\"./use-intersection\");\nconst _getdomainlocale = require(\"./get-domain-locale\");\nconst _addbasepath = require(\"./add-base-path\");\nconst _usemergedref = require(\"./use-merged-ref\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  if (!(0, _islocalurl.isLocalURL)(href)) {\n    return;\n  }\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n    // Let the link's locale prop override the default router locale.\n    typeof options.locale !== 'undefined' ? options.locale : 'locale' in router ? router.locale : undefined;\n    const prefetchedKey = href + '%' + as + '%' + locale;\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return;\n    }\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey);\n  }\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch(err => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n}\nfunction isModifiedEvent(event) {\n  const eventTarget = event.currentTarget;\n  const target = eventTarget.getAttribute('target');\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||\n  // triggers resource download\n  event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n  const {\n    nodeName\n  } = e.currentTarget;\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n  if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _islocalurl.isLocalURL)(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n  e.preventDefault();\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll != null ? scroll : true;\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll\n      });\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll\n      });\n    }\n  };\n  navigate();\n}\nfunction formatStringOrUrl(urlObjOrString) {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString;\n  }\n  return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = /*#__PURE__*/_react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n  let children;\n  const {\n    href: hrefProp,\n    as: asProp,\n    children: childrenProp,\n    prefetch: prefetchProp = null,\n    passHref,\n    replace,\n    shallow,\n    scroll,\n    locale,\n    onClick,\n    onMouseEnter: onMouseEnterProp,\n    onTouchStart: onTouchStartProp,\n    legacyBehavior = false,\n    ...restProps\n  } = props;\n  children = childrenProp;\n  if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n    children = /*#__PURE__*/(0, _jsxruntime.jsx)(\"a\", {\n      children: children\n    });\n  }\n  const router = _react.default.useContext(_routercontextsharedruntime.RouterContext);\n  const prefetchEnabled = prefetchProp !== false;\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args) {\n      return Object.defineProperty(new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + (typeof window !== 'undefined' ? \"\\nOpen your browser's console to view the Component stack trace.\" : '')), \"__NEXT_ERROR_CODE\", {\n        value: \"E319\",\n        enumerable: false,\n        configurable: true\n      });\n    }\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart') {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n  }\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    if (!router) {\n      const resolvedHref = formatStringOrUrl(hrefProp);\n      return {\n        href: resolvedHref,\n        as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n      };\n    }\n    const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(router, hrefProp, true);\n    return {\n      href: resolvedHref,\n      as: asProp ? (0, _resolvehref.resolveHref)(router, asProp) : resolvedAs || resolvedHref\n    };\n  }, [router, hrefProp, asProp]);\n  const previousHref = _react.default.useRef(href);\n  const previousAs = _react.default.useRef(as);\n  // This will return the first child, if multiple are provided it will throw an error\n  let child;\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n      }\n      if (onMouseEnterProp) {\n        console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n      }\n      try {\n        child = _react.default.Children.only(children);\n      } catch (err) {\n        if (!children) {\n          throw Object.defineProperty(new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"), \"__NEXT_ERROR_CODE\", {\n            value: \"E320\",\n            enumerable: false,\n            configurable: true\n          });\n        }\n        throw Object.defineProperty(new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + (typeof window !== 'undefined' ? \" \\nOpen your browser's console to view the Component stack trace.\" : '')), \"__NEXT_ERROR_CODE\", {\n          value: \"E266\",\n          enumerable: false,\n          configurable: true\n        });\n      }\n    } else {\n      child = _react.default.Children.only(children);\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if ((children == null ? void 0 : children.type) === 'a') {\n        throw Object.defineProperty(new Error('Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'), \"__NEXT_ERROR_CODE\", {\n          value: \"E209\",\n          enumerable: false,\n          configurable: true\n        });\n      }\n    }\n  }\n  const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n  const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n    rootMargin: '200px'\n  });\n  const setIntersectionWithResetRef = _react.default.useCallback(el => {\n    // Before the link getting observed, check if visible state need to be reset\n    if (previousAs.current !== as || previousHref.current !== href) {\n      resetVisible();\n      previousAs.current = as;\n      previousHref.current = href;\n    }\n    setIntersectionRef(el);\n  }, [as, href, resetVisible, setIntersectionRef]);\n  const setRef = (0, _usemergedref.useMergedRef)(setIntersectionWithResetRef, childRef);\n  // Prefetch the URL if we haven't already and it's visible.\n  _react.default.useEffect(() => {\n    // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n    if (process.env.NODE_ENV !== 'production') {\n      return;\n    }\n    if (!router) {\n      return;\n    }\n    // If we don't need to prefetch the URL, don't do prefetch.\n    if (!isVisible || !prefetchEnabled) {\n      return;\n    }\n    // Prefetch the URL.\n    prefetch(router, href, as, {\n      locale\n    });\n  }, [as, href, isVisible, locale, prefetchEnabled, router == null ? void 0 : router.locale, router]);\n  const childProps = {\n    ref: setRef,\n    onClick(e) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw Object.defineProperty(new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.'), \"__NEXT_ERROR_CODE\", {\n            value: \"E312\",\n            enumerable: false,\n            configurable: true\n          });\n        }\n      }\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n      if (!router) {\n        return;\n      }\n      if (e.defaultPrevented) {\n        return;\n      }\n      linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n    },\n    onMouseEnter(e) {\n      if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n        onMouseEnterProp(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e);\n      }\n      if (!router) {\n        return;\n      }\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      });\n    },\n    onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START ? undefined : function onTouchStart(e) {\n      if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n        onTouchStartProp(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n        child.props.onTouchStart(e);\n      }\n      if (!router) {\n        return;\n      }\n      prefetch(router, href, as, {\n        locale,\n        priority: true,\n        // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n        bypassPrefetchedCheck: true\n      });\n    }\n  };\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user.\n  // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n  if ((0, _utils.isAbsoluteUrl)(as)) {\n    childProps.href = as;\n  } else if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : router == null ? void 0 : router.locale;\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain = (router == null ? void 0 : router.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, router == null ? void 0 : router.locales, router == null ? void 0 : router.domainLocales);\n    childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, router == null ? void 0 : router.defaultLocale));\n  }\n  return legacyBehavior ? /*#__PURE__*/_react.default.cloneElement(child, childProps) : /*#__PURE__*/(0, _jsxruntime.jsx)(\"a\", {\n    ...restProps,\n    ...childProps,\n    children: children\n  });\n});\nconst _default = Link;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["_default","prefetched","Set","prefetch","router","href","as","options","window","_islocalurl","isLocalURL","bypassPrefetchedCheck","locale","undefined","prefetchedKey","has","add","catch","err","process","env","NODE_ENV","isModifiedEvent","event","eventTarget","currentTarget","target","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","linkClicked","e","replace","shallow","scroll","nodeName","isAnchorNodeName","toUpperCase","preventDefault","navigate","routerScroll","formatStringOrUrl","urlObjOrString","_formaturl","formatUrl","Link","_react","default","forwardRef","LinkComponent","props","forwardedRef","children","hrefProp","asProp","childrenProp","prefetchProp","passHref","onClick","onMouseEnter","onMouseEnterProp","onTouchStart","onTouchStartProp","legacyBehavior","restProps","_jsxruntime","jsx","useContext","_routercontextsharedruntime","RouterContext","prefetchEnabled","createPropError","args","Object","defineProperty","Error","key","expected","actual","requiredPropsGuard","requiredProps","keys","forEach","_","optionalPropsGuard","optionalProps","valType","useMemo","resolvedHref","resolvedAs","_resolvehref","resolveHref","previousHref","useRef","previousAs","child","console","warn","Children","only","type","childRef","ref","setIntersectionRef","isVisible","resetVisible","_useintersection","useIntersection","rootMargin","setIntersectionWithResetRef","useCallback","el","current","setRef","_usemergedref","useMergedRef","useEffect","childProps","defaultPrevented","priority","__NEXT_LINK_NO_TOUCH_START","_utils","isAbsoluteUrl","curLocale","localeDomain","isLocaleDomain","_getdomainlocale","getDomainLocale","locales","domainLocales","_addbasepath","addBasePath","_addlocale","addLocale","defaultLocale","cloneElement"],"sources":["C:\\Users\\DELL\\node_modules\\next\\src\\client\\link.tsx"],"sourcesContent":["'use client'\n\nimport type {\n  NextRouter,\n  PrefetchOptions as RouterPrefetchOptions,\n} from '../shared/lib/router/router'\n\nimport React from 'react'\nimport type { UrlObject } from 'url'\nimport { resolveHref } from './resolve-href'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { formatUrl } from '../shared/lib/router/utils/format-url'\nimport { isAbsoluteUrl } from '../shared/lib/utils'\nimport { addLocale } from './add-locale'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport type { AppRouterInstance } from '../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from './use-intersection'\nimport { getDomainLocale } from './get-domain-locale'\nimport { addBasePath } from './add-base-path'\nimport { useMergedRef } from './use-merged-ref'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<InternalLinkProps>\n\nconst prefetched = new Set<string>()\n\ntype PrefetchOptions = RouterPrefetchOptions & {\n  /**\n   * bypassPrefetchedCheck will bypass the check to see if the `href` has\n   * already been fetched.\n   */\n  bypassPrefetchedCheck?: boolean\n}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  if (!isLocalURL(href)) {\n    return\n  }\n\n  // We should only dedupe requests when experimental.optimisticClientCache is\n  // disabled.\n  if (!options.bypassPrefetchedCheck) {\n    const locale =\n      // Let the link's locale prop override the default router locale.\n      typeof options.locale !== 'undefined'\n        ? options.locale\n        : // Otherwise fallback to the router's locale.\n          'locale' in router\n          ? router.locale\n          : undefined\n\n    const prefetchedKey = href + '%' + as + '%' + locale\n\n    // If we've already fetched the key, then don't prefetch it again!\n    if (prefetched.has(prefetchedKey)) {\n      return\n    }\n\n    // Mark this URL as prefetched.\n    prefetched.add(prefetchedKey)\n  }\n\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (isAnchorNodeName && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  navigate()\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(RouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? // TODO: Remove this addendum if Owner Stacks are available\n                \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        locale: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (key === 'locale') {\n          if (props[key] && valType !== 'string') {\n            throw createPropError({\n              key,\n              expected: '`string`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    const { href, as } = React.useMemo(() => {\n      if (!router) {\n        const resolvedHref = formatStringOrUrl(hrefProp)\n        return {\n          href: resolvedHref,\n          as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n        }\n      }\n\n      const [resolvedHref, resolvedAs] = resolveHref(router, hrefProp, true)\n\n      return {\n        href: resolvedHref,\n        as: asProp ? resolveHref(router, asProp) : resolvedAs || resolvedHref,\n      }\n    }, [router, hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element | null) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, as, { locale })\n    }, [as, href, isVisible, locale, prefetchEnabled, router?.locale, router])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        prefetch(router, href, as, {\n          locale,\n          priority: true,\n          // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n          bypassPrefetchedCheck: true,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            prefetch(router, href, as, {\n              locale,\n              priority: true,\n              // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n              bypassPrefetchedCheck: true,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      const curLocale = typeof locale !== 'undefined' ? locale : router?.locale\n\n      // we only render domain locales if we are currently on a domain locale\n      // so that locale links are still visitable in development/preview envs\n      const localeDomain =\n        router?.isLocaleDomain &&\n        getDomainLocale(as, curLocale, router?.locales, router?.domainLocales)\n\n      childProps.href =\n        localeDomain ||\n        addBasePath(addLocale(as, curLocale, router?.defaultLocale))\n    }\n\n    return legacyBehavior ? (\n      React.cloneElement(child, childProps)\n    ) : (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nexport default Link\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}