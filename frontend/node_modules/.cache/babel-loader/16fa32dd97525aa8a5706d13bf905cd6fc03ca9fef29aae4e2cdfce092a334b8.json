{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from'react';import{useAuth}from'./AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext();export function UserProvider(_ref){let{children}=_ref;const{user}=useAuth();const[profile,setProfile]=useState(null);const[preferences,setPreferences]=useState({});const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{if(user){const fetchProfile=async()=>{try{const res=await fetch(`/api/users/${user.id}`);const data=await res.json();setProfile(data);setPreferences(data.preferences||{});}catch(err){setError('Failed to load profile');}finally{setLoading(false);}};fetchProfile();}else{setLoading(false);}},[user]);const updateProfile=async updates=>{try{const res=await fetch(`/api/users/${user.id}`,{method:'PATCH',body:JSON.stringify(updates)});const data=await res.json();setProfile(prev=>({...prev,...data}));return true;}catch(error){throw new Error('Profile update failed');}};const value={profile,preferences,loading,error,updateProfile};return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});}export const useUser=()=>{const context=useContext(UserContext);if(!context)throw new Error('useUser must be used within UserProvider');return context;};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useAuth","jsx","_jsx","UserContext","UserProvider","_ref","children","user","profile","setProfile","preferences","setPreferences","loading","setLoading","error","setError","fetchProfile","res","fetch","id","data","json","err","updateProfile","updates","method","body","JSON","stringify","prev","Error","value","Provider","useUser","context"],"sources":["/workspace/frontend/src/context/core/UserContext.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  const { user } = useAuth();\n  const [profile, setProfile] = useState(null);\n  const [preferences, setPreferences] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      const fetchProfile = async () => {\n        try {\n          const res = await fetch(`/api/users/${user.id}`);\n          const data = await res.json();\n          setProfile(data);\n          setPreferences(data.preferences || {});\n        } catch (err) {\n          setError('Failed to load profile');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n\n  const updateProfile = async (updates) => {\n    try {\n      const res = await fetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updates)\n      });\n      const data = await res.json();\n      setProfile(prev => ({ ...prev, ...data }));\n      return true;\n    } catch (error) {\n      throw new Error('Profile update failed');\n    }\n  };\n\n  const value = {\n    profile,\n    preferences,\n    loading,\n    error,\n    updateProfile\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) throw new Error('useUser must be used within UserProvider');\n  return context;\n};\n"],"mappings":"AACA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACtE,OAASC,OAAO,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExC,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAQ,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAAEE,IAAK,CAAC,CAAGP,OAAO,CAAC,CAAC,CAC1B,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACY,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,GAAIQ,IAAI,CAAE,CACR,KAAM,CAAAS,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAcX,IAAI,CAACY,EAAE,EAAE,CAAC,CAChD,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7BZ,UAAU,CAACW,IAAI,CAAC,CAChBT,cAAc,CAACS,IAAI,CAACV,WAAW,EAAI,CAAC,CAAC,CAAC,CACxC,CAAE,MAAOY,GAAG,CAAE,CACZP,QAAQ,CAAC,wBAAwB,CAAC,CACpC,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CACDG,YAAY,CAAC,CAAC,CAChB,CAAC,IAAM,CACLH,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAAE,CAACN,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAgB,aAAa,CAAG,KAAO,CAAAC,OAAO,EAAK,CACvC,GAAI,CACF,KAAM,CAAAP,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAcX,IAAI,CAACY,EAAE,EAAE,CAAE,CAC/CM,MAAM,CAAE,OAAO,CACfC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,OAAO,CAC9B,CAAC,CAAC,CACF,KAAM,CAAAJ,IAAI,CAAG,KAAM,CAAAH,GAAG,CAACI,IAAI,CAAC,CAAC,CAC7BZ,UAAU,CAACoB,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,GAAGT,IAAK,CAAC,CAAC,CAAC,CAC1C,MAAO,KAAI,CACb,CAAE,MAAON,KAAK,CAAE,CACd,KAAM,IAAI,CAAAgB,KAAK,CAAC,uBAAuB,CAAC,CAC1C,CACF,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZvB,OAAO,CACPE,WAAW,CACXE,OAAO,CACPE,KAAK,CACLS,aACF,CAAC,CAED,mBACErB,IAAA,CAACC,WAAW,CAAC6B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAzB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAMA,MAAO,MAAM,CAAA2B,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGrC,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAAC+B,OAAO,CAAE,KAAM,IAAI,CAAAJ,KAAK,CAAC,0CAA0C,CAAC,CACzE,MAAO,CAAAI,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}