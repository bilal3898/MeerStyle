{"ast":null,"code":"import{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ModalContext=/*#__PURE__*/createContext();const modalReducer=(state,action)=>{switch(action.type){case'OPEN_MODAL':return{currentModal:action.modalType,modalProps:action.props||{}};case'CLOSE_MODAL':return{currentModal:null,modalProps:{}};default:return state;}};export function ModalProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(modalReducer,{currentModal:null,modalProps:{}});const openModal=function(modalType){let props=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};dispatch({type:'OPEN_MODAL',modalType,props});};const closeModal=()=>{dispatch({type:'CLOSE_MODAL'});};return/*#__PURE__*/_jsx(ModalContext.Provider,{value:{...state,openModal,closeModal},children:children});}export const useModal=()=>{const context=useContext(ModalContext);if(!context)throw new Error('useModal must be used within ModalProvider');return context;};","map":{"version":3,"names":["createContext","useContext","useReducer","jsx","_jsx","ModalContext","modalReducer","state","action","type","currentModal","modalType","modalProps","props","ModalProvider","_ref","children","dispatch","openModal","arguments","length","undefined","closeModal","Provider","value","useModal","context","Error"],"sources":["/workspace/frontend/src/context/ui/ModalContext.jsx"],"sourcesContent":["import { createContext, useContext, useReducer } from 'react';\n\nconst ModalContext = createContext();\n\nconst modalReducer = (state, action) => {\n  switch(action.type) {\n    case 'OPEN_MODAL':\n      return {\n        currentModal: action.modalType,\n        modalProps: action.props || {}\n      };\n    case 'CLOSE_MODAL':\n      return { currentModal: null, modalProps: {} };\n    default:\n      return state;\n  }\n};\n\nexport function ModalProvider({ children }) {\n  const [state, dispatch] = useReducer(modalReducer, {\n    currentModal: null,\n    modalProps: {}\n  });\n\n  const openModal = (modalType, props = {}) => {\n    dispatch({ type: 'OPEN_MODAL', modalType, props });\n  };\n\n  const closeModal = () => {\n    dispatch({ type: 'CLOSE_MODAL' });\n  };\n\n  return (\n    <ModalContext.Provider value={{ ...state, openModal, closeModal }}>\n      {children}\n    </ModalContext.Provider>\n  );\n}\n\nexport const useModal = () => {\n  const context = useContext(ModalContext);\n  if(!context) throw new Error('useModal must be used within ModalProvider');\n  return context;\n};"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9D,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,KAAM,CAAAM,YAAY,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACtC,OAAOA,MAAM,CAACC,IAAI,EAChB,IAAK,YAAY,CACf,MAAO,CACLC,YAAY,CAAEF,MAAM,CAACG,SAAS,CAC9BC,UAAU,CAAEJ,MAAM,CAACK,KAAK,EAAI,CAAC,CAC/B,CAAC,CACH,IAAK,aAAa,CAChB,MAAO,CAAEH,YAAY,CAAE,IAAI,CAAEE,UAAU,CAAE,CAAC,CAAE,CAAC,CAC/C,QACE,MAAO,CAAAL,KAAK,CAChB,CACF,CAAC,CAED,MAAO,SAAS,CAAAO,aAAaA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACR,KAAK,CAAEU,QAAQ,CAAC,CAAGf,UAAU,CAACI,YAAY,CAAE,CACjDI,YAAY,CAAE,IAAI,CAClBE,UAAU,CAAE,CAAC,CACf,CAAC,CAAC,CAEF,KAAM,CAAAM,SAAS,CAAG,QAAAA,CAACP,SAAS,CAAiB,IAAf,CAAAE,KAAK,CAAAM,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtCF,QAAQ,CAAC,CAAER,IAAI,CAAE,YAAY,CAAEE,SAAS,CAAEE,KAAM,CAAC,CAAC,CACpD,CAAC,CAED,KAAM,CAAAS,UAAU,CAAGA,CAAA,GAAM,CACvBL,QAAQ,CAAC,CAAER,IAAI,CAAE,aAAc,CAAC,CAAC,CACnC,CAAC,CAED,mBACEL,IAAA,CAACC,YAAY,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAE,GAAGjB,KAAK,CAAEW,SAAS,CAAEI,UAAW,CAAE,CAAAN,QAAA,CAC/DA,QAAQ,CACY,CAAC,CAE5B,CAEA,MAAO,MAAM,CAAAS,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACI,YAAY,CAAC,CACxC,GAAG,CAACqB,OAAO,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC1E,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}