{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"notFound\", {\n  enumerable: true,\n  get: function () {\n    return notFound;\n  }\n});\nconst _httpaccessfallback = require(\"./http-access-fallback/http-access-fallback\");\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\nconst DIGEST = \"\" + _httpaccessfallback.HTTP_ERROR_FALLBACK_ERROR_CODE + \";404\";\nfunction notFound() {\n  // eslint-disable-next-line no-throw-literal\n  const error = Object.defineProperty(new Error(DIGEST), \"__NEXT_ERROR_CODE\", {\n    value: \"E394\",\n    enumerable: false,\n    configurable: true\n  });\n  error.digest = DIGEST;\n  throw error;\n}\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["notFound","DIGEST","_httpaccessfallback","HTTP_ERROR_FALLBACK_ERROR_CODE","error","Object","defineProperty","Error","digest"],"sources":["C:\\Users\\DELL\\node_modules\\next\\src\\client\\components\\not-found.ts"],"sourcesContent":["import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n"],"mappings":";;;;;+BAsBgB;;;WAAAA,QAAA;;;oCAnBT;AAEP;;;;;;;;;;;;;;AAeA,MAAMC,MAAA,GAAS,EAAC,GAAEC,mBAAA,CAAAC,8BAA8B,GAAC;AAE1C,SAASH,SAAA;EACd;EACA,MAAMI,KAAA,GAAQC,MAAA,CAAAC,cAAiB,CAAjB,IAAIC,KAAA,CAAMN,MAAA,GAAV;WAAA;gBAAA;kBAAA;EAAgB;EAC5BG,KAAA,CAAkCI,MAAM,GAAGP,MAAA;EAE7C,MAAMG,KAAA;AACR","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}