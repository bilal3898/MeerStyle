{"ast":null,"code":"import{createContext,useContext,useState,useEffect}from'react';import jwtDecode from'jwt-decode';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');if(token){const decoded=jwtDecode(token);setUser({id:decoded.sub,email:decoded.email,role:decoded.role||'user'});}setLoading(false);},[]);const login=async credentials=>{try{const res=await fetch('/api/auth/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(credentials)});const{token}=await res.json();localStorage.setItem('token',token);const decoded=jwtDecode(token);setUser({id:decoded.sub,email:decoded.email,role:decoded.role||'user'});return true;}catch(error){throw new Error('Login failed');}};const logout=()=>{localStorage.removeItem('token');setUser(null);};const value={user,loading,login,logout,isAuthenticated:!!user,isAdmin:(user===null||user===void 0?void 0:user.role)==='admin'};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}export const useAuth=()=>{const context=useContext(AuthContext);if(!context)throw new Error('useAuth must be used within AuthProvider');return context;};","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jwtDecode","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","decoded","id","sub","email","role","login","credentials","res","fetch","method","headers","body","JSON","stringify","json","setItem","error","Error","logout","removeItem","value","isAuthenticated","isAdmin","Provider","useAuth","context"],"sources":["/workspace/frontend/src/context/core/AuthContext.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nconst AuthContext = createContext();\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const decoded = jwtDecode(token);\n      setUser({\n        id: decoded.sub,\n        email: decoded.email,\n        role: decoded.role || 'user'\n      });\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(credentials)\n      });\n      const { token } = await res.json();\n      localStorage.setItem('token', token);\n      const decoded = jwtDecode(token);\n      setUser({\n        id: decoded.sub,\n        email: decoded.email,\n        role: decoded.role || 'user'\n      });\n      return true;\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: user?.role === 'admin'\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n\nAuthProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};\n"],"mappings":"AACA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACtE,MAAO,CAAAC,SAAS,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnC,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,SAAS,CAAAQ,YAAYA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACT,KAAM,CAAAG,OAAO,CAAGd,SAAS,CAACW,KAAK,CAAC,CAChCH,OAAO,CAAC,CACNO,EAAE,CAAED,OAAO,CAACE,GAAG,CACfC,KAAK,CAAEH,OAAO,CAACG,KAAK,CACpBC,IAAI,CAAEJ,OAAO,CAACI,IAAI,EAAI,MACxB,CAAC,CAAC,CACJ,CACAR,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAAK,CAAG,KAAO,CAAAC,WAAW,EAAK,CACnC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,iBAAiB,CAAE,CACzCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,WAAW,CAClC,CAAC,CAAC,CACF,KAAM,CAAET,KAAM,CAAC,CAAG,KAAM,CAAAU,GAAG,CAACO,IAAI,CAAC,CAAC,CAClChB,YAAY,CAACiB,OAAO,CAAC,OAAO,CAAElB,KAAK,CAAC,CACpC,KAAM,CAAAG,OAAO,CAAGd,SAAS,CAACW,KAAK,CAAC,CAChCH,OAAO,CAAC,CACNO,EAAE,CAAED,OAAO,CAACE,GAAG,CACfC,KAAK,CAAEH,OAAO,CAACG,KAAK,CACpBC,IAAI,CAAEJ,OAAO,CAACI,IAAI,EAAI,MACxB,CAAC,CAAC,CACF,MAAO,KAAI,CACb,CAAE,MAAOY,KAAK,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,cAAc,CAAC,CACjC,CACF,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBpB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC,CAChCzB,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,KAAM,CAAA0B,KAAK,CAAG,CACZ3B,IAAI,CACJE,OAAO,CACPU,KAAK,CACLa,MAAM,CACNG,eAAe,CAAE,CAAC,CAAC5B,IAAI,CACvB6B,OAAO,CAAE,CAAA7B,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEW,IAAI,IAAK,OAC1B,CAAC,CAED,mBACEhB,IAAA,CAACC,WAAW,CAACkC,QAAQ,EAACH,KAAK,CAAEA,KAAM,CAAA5B,QAAA,CAChC,CAACG,OAAO,EAAIH,QAAQ,CACD,CAAC,CAE3B,CAMA,MAAO,MAAM,CAAAgC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG1C,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACoC,OAAO,CAAE,KAAM,IAAI,CAAAR,KAAK,CAAC,0CAA0C,CAAC,CACzE,MAAO,CAAAQ,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}