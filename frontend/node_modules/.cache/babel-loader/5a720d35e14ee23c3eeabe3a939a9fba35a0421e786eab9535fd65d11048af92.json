{"ast":null,"code":"var _jsxFileName = \"/workspace/frontend/src/context/core/UserContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport function UserProvider({\n  children\n}) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [profile, setProfile] = useState(null);\n  const [preferences, setPreferences] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (user) {\n      const fetchProfile = async () => {\n        try {\n          const res = await fetch(`/api/users/${user.id}`);\n          const data = await res.json();\n          setProfile(data);\n          setPreferences(data.preferences || {});\n        } catch (err) {\n          setError('Failed to load profile');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n  const updateProfile = async updates => {\n    try {\n      const res = await fetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updates)\n      });\n      const data = await res.json();\n      setProfile(prev => ({\n        ...prev,\n        ...data\n      }));\n      return true;\n    } catch (error) {\n      throw new Error('Profile update failed');\n    }\n  };\n  const value = {\n    profile,\n    preferences,\n    loading,\n    error,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(UserProvider, \"oXAA4OmNZD/VyFT9XawhVRHjIUM=\", false, function () {\n  return [useAuth];\n});\n_c = UserProvider;\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) throw new Error('useUser must be used within UserProvider');\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["PropTypes","createContext","useContext","useState","useEffect","useAuth","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","profile","setProfile","preferences","setPreferences","loading","setLoading","error","setError","fetchProfile","res","fetch","id","data","json","err","updateProfile","updates","method","body","JSON","stringify","prev","Error","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","useUser","_s2","context","$RefreshReg$"],"sources":["/workspace/frontend/src/context/core/UserContext.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\n\nconst UserContext = createContext();\n\nexport function UserProvider({ children }) {\n  const { user } = useAuth();\n  const [profile, setProfile] = useState(null);\n  const [preferences, setPreferences] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (user) {\n      const fetchProfile = async () => {\n        try {\n          const res = await fetch(`/api/users/${user.id}`);\n          const data = await res.json();\n          setProfile(data);\n          setPreferences(data.preferences || {});\n        } catch (err) {\n          setError('Failed to load profile');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchProfile();\n    } else {\n      setLoading(false);\n    }\n  }, [user]);\n\n  const updateProfile = async (updates) => {\n    try {\n      const res = await fetch(`/api/users/${user.id}`, {\n        method: 'PATCH',\n        body: JSON.stringify(updates)\n      });\n      const data = await res.json();\n      setProfile(prev => ({ ...prev, ...data }));\n      return true;\n    } catch (error) {\n      throw new Error('Profile update failed');\n    }\n  };\n\n  const value = {\n    profile,\n    preferences,\n    loading,\n    error,\n    updateProfile\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) throw new Error('useUser must be used within UserProvider');\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}